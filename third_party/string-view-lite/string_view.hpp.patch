--- /home/binji/dev/string-view-lite/include/nonstd/string_view.hpp	2018-12-04 16:07:55.029834440 -0800
+++ nonstd/string_view.hpp	2018-12-04 18:53:34.876394698 -0800
@@ -505,7 +505,7 @@
             return data_at( pos );
         }
 
-        throw std::out_of_range("nonst::string_view::at()");
+        nssv_throw(std::out_of_range, "nonst::string_view::at()");
     }
 
     nssv_constexpr const_reference front() const { return data_at( 0 );          }
@@ -540,7 +540,7 @@
     size_type copy( CharT * dest, size_type n, size_type pos = 0 ) const
     {
         if ( pos > size() )
-            throw std::out_of_range("nonst::string_view::copy()");
+            nssv_throw(std::out_of_range, "nonst::string_view::copy()");
 
         const size_type rlen = (std::min)( n, size() - pos );
 
@@ -552,7 +552,7 @@
     nssv_constexpr14 basic_string_view substr( size_type pos = 0, size_type n = npos ) const
     {
         if ( pos > size() )
-            throw std::out_of_range("nonst::string_view::substr()");
+            nssv_throw(std::out_of_range, "nonst::string_view::substr()");
 
         return basic_string_view( data() + pos, (std::min)( n, size() - pos ) );
     }
@@ -712,7 +712,9 @@
 
     nssv_constexpr size_type find_last_of( basic_string_view v, size_type pos = npos ) const nssv_noexcept  // (1)
     {
-        return pos >= size()
+        return empty()
+            ? npos
+            : pos >= size()
             ? find_last_of( v, size() - 1 )
             : to_pos( std::find_first_of( const_reverse_iterator( cbegin() + pos + 1 ), crend(), v.cbegin(), v.cend(), Traits::eq ) );
     }
@@ -760,7 +762,9 @@
 
     nssv_constexpr size_type find_last_not_of( basic_string_view v, size_type pos = npos ) const nssv_noexcept  // (1)
     {
-        return pos >= size()
+        return empty()
+            ? npos
+            : pos >= size()
             ? find_last_not_of( v, size() - 1 )
             : to_pos( std::find_if( const_reverse_iterator( cbegin() + pos + 1 ), crend(), not_in_view( v ) ) );
     }
